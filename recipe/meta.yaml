{% set name = "AmberTools" %}
# Versioning scheme uses AmberTools major release as MAJOR version number, patch level as MINOR version number
# Update the MINOR version number as new patch releases come out
{% set version = "23.3" %}
# use run or skip
{% set unit_tests = "skip" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://ambermd.org/downloads/AmberTools23_rc6.tar.bz2
  sha256: debb52e6ef2e1b4eaa917a8b4d4934bd2388659c660501a81ea044903bf9ee9d
  patches:
    - patches/do_not_symlink_missing_ff12pol.patch
    - patches/do_not_install_vendored_parmed.patch
    - patches/do_not_vendor_packmol.patch
    - patches/remove_mtune_native_for_m1.patch  # [arm64]
    - patches/remove_nab2c_and_friends.patch  # [arm64]

build:
  number: 2
  skip: True  # [win or py2k or ppc64le or aarch64]
  script_env:
    - unit_tests={{ unit_tests }}

requirements:
  build:
    - bc
    - bison
    - cmake         # [not osx]
    - cmake 3.20.*  # [osx]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - flex
    - libgomp      # [linux and not aarch64]
    - llvm-openmp  # [osx]
    - make
    - matplotlib-base                        # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - openssl
    - patch
    - perl
    - python                                 # [build_platform != target_platform]
    - scipy                                  # [build_platform != target_platform]
    - tcsh
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
  host:
    - python
    - setuptools
    - numpy
    - scipy
    - matplotlib-base
    - bzip2
    - zlib
    - boost-cpp
    - libnetcdf
    - netcdf-fortran
    - pthread-stubs
    - fftw
    - arpack
    - libblas
    - liblapack
    - xorg-libxt  # [unix]
    - xorg-libxext   # [unix]
    - xorg-libx11   # [unix]
    - readline
    - llvm-openmp  # [osx]
    - libgomp      # [linux and not aarch64]
    - parmed 4.0.0
    - packmol
    - openssl
  run:
    - python
    - setuptools
    - perl
    - numpy
    - scipy
    - matplotlib-base
    - boost-cpp
    - joblib
    - libnetcdf
    - netcdf-fortran
    - fftw
    - libblas
    - liblapack
    - xorg-libxt  # [unix]
    - xorg-libxext  # [unix]
    - xorg-libx11   # [unix]
    - readline
    - llvm-openmp  # [osx]
    - libgomp      # [linux and not aarch64]
    - parmed >=4.0.0,<5.0.0a0
    - packmol
  run_constrained:
    - ambermini ==9999999999

test:
  requires:
{% if unit_tests == "run" %}
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - {{ compiler('cxx') }}
    - util-linux  # [linux64]
    - make
{% endif %}
    - tcsh
    # Try to force a library incompatibility error in osx (see #22)
    - lxml  # [osx]
    - rdkit  # [osx]
  source_files:
{% if unit_tests == "run" %}
    - "*"
{% else %}
    # we need to copy at least one file, otherwise we can't use SRC_DIR in run_test.sh
    - README
{% endif %}
  # commands: check run_test.sh for CLI tests
  imports:
    - parmed
    - pdb4amber
    - pymsmt
    - pytraj
    - sander
    # Try to force a library incompatibility error in osx (see #22)
    - rdkit  # [osx]
    - rdkit.Chem.AllChem  # [osx]

about:
  home: http://ambermd.org/AmberTools.php
  license: GPL-3.0-or-later AND LGPL-3.0-or-later AND BSD-3-Clause AND MIT
  license_file: AmberTools/LICENSE
  summary: 'AmberTools is a set of programs for biomolecular simulation and analysis'
  description: |
    AmberTools is a set of programs for biomolecular simulation and analysis.
    They are designed to work well with each other, and with the "regular" Amber
    suite of programs. You can perform many simulation tasks with AmberTools,
    and you can do more extensive simulations with the combination of AmberTools
    and Amber itself.

extra:
  recipe-maintainers:
    - simonbray
    - jaimergp
    - dacase
    - mikemhenry
    - mattwthompson
    - j-wags
    - swails
