{% set name = "AmberTools" %}
# Versioning scheme uses AmberTools major release as MAJOR version number, patch level as MINOR version number
# Update the MINOR version number as new patch releases come out
{% set version = "19.11" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://ambermd.org/downloads/AmberTools19.tar.bz2
  sha256: 0c86937904854b64e4831e047851f504ec45b42e593db4ded92c1bee5973e699
  patches:
    - patches/do_not_use_global_conda_prefix.patch
    - patches/do_not_symlink_missing_ff12pol.patch
    - patches/use_external_netcdf.patch
    - patches/fix_mm_pbsa_pl.patch
    - patches/fix_cpinutil_pKa_comparison_bug.patch
    - patches/do_not_override_osx_deployment_target.patch  # [osx]
    # See #22 for more details on this patch:
    - patches/do_not_bundle_osx_libs.patch  # [osx]
    # Fix weird bug described here:
    #   https://github.com/conda-forge/ambertools-feedstock/pull/11#issuecomment-570618741
    - patches/delete_xdrfile_version.patch  # [osx]
    ## Tests
    - patches/do_not_use_AS_envvar_in_tests.patch
    - patches/fix_run_nef_tests.patch
    - patches/fix_sander_1ahoa_pme_test.patch
    ## /Tests
    ## IMPORTANT:
    # The following patch needs to be applied manually in build.sh
    # It was downloaded from this GH issue - it might be included by default in future updates
    #   https://github.com/Amber-MD/cmake-buildscripts/issues/131#issuecomment-561280272
    # - patches/amber19-fix-cmake.patch

build:
  number: 4
  skip: True  # [win or py2k]

requirements:
  build:
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - ld64 409.12 h3c32e8a_4   # [osx]
    - bc
    - flex
    - patch
    - tcsh
    - bison
    - make
    - cmake
    - perl
    - llvm-openmp  # [osx]
    - libgomp      # [linux and not aarch64]
  host:
    - python
    - setuptools
    - cython
    - numpy
    - scipy
    - matplotlib-base
    - bzip2
    - zlib
    - boost-cpp
    - libnetcdf
    - netcdf-fortran
    - pthread-stubs
    - fftw
    - libblas
    - liblapack
    - xorg-libxt  # [linux]
    - xorg-libxext   # [linux]
    - xorg-libx11   # [linux]
    - readline
    - llvm-openmp  # [osx]
    - libgomp      # [linux and not aarch64]
  run:
    - python
    - perl
    - cython
    - numpy
    - scipy
    - matplotlib-base
    - boost-cpp
    - libnetcdf
    - netcdf-fortran
    - fftw
    - libblas
    - liblapack
    - xorg-libxt  # [linux]
    - xorg-libxext  # [linux]
    - xorg-libx11   # [linux]
    - readline
    - llvm-openmp  # [osx]
    - libgomp      # [linux and not aarch64]

test:
  requires:
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - util-linux  # [linux64]
  # Try to force a library incompatibility error in osx (see #22)
    - lxml  # [osx]
    - rdkit  # [osx]
  commands:
    - antechamber -h
    - cpptraj -h
    - ffgbsa -h
    - MCPB.py -h
    - mdnab -h
    - minab -h
    - mmpbsa_py_energy -h
    - parmchk2 -h
    - parmed -h
    - pdb4amber -h
    - respgen -h
    - sqm -h
    - teLeap -h
    - tleap -h
  imports:
    - pytraj
    - parmed
    - rdkit  # [osx]
    - rdkit.Chem.AllChem  # [osx]

about:
  home: http://ambermd.org/AmberTools.php
  license: Multiple
  license_file: AmberTools/LICENSE
  summary: 'AmberTools is a set of programs for biomolecular simulation and analysis'
  description: |
    AmberTools is a set of programs for biomolecular simulation and analysis.
    They are designed to work well with each other, and with the “regular” Amber
    suite of programs. You can perform many simulation tasks with AmberTools,
    and you can do more extensive simulations with the combination of AmberTools
    and Amber itself.

extra:
  recipe-maintainers:
    - simonbray
    - jaimergp
