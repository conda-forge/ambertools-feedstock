diff --git a/AmberTools/src/pysander/setup.py b/AmberTools/src/pysander/setup.py
index 580c108a..eb88757a 100644
--- a/AmberTools/src/pysander/setup.py
+++ b/AmberTools/src/pysander/setup.py
@@ -6,15 +6,6 @@ from os.path import join
 import sys
 
 
-# Update/correct sys env vars to be correct for OS X.
-if sys.platform == 'darwin':
-    os.environ['CXX'] = 'clang++'
-    os.environ['CC'] = 'clang'
-# PGI does not work with Python, it appears. So force gcc, which is almost
-# universally available
-elif os.environ.get('CC', '').endswith('pgcc'):
-    os.environ['CXX'] = 'g++'
-    os.environ['CC'] = 'gcc'
 
 sander_extension_source = 'sander/src/pysandermodule.c'
 sanderles_extension_source = 'sanderles/src/pysandermodule.c'
diff --git a/AmberTools/src/pytraj/setup.py b/AmberTools/src/pytraj/setup.py
index 41cc79a2..c2c756aa 100644
--- a/AmberTools/src/pytraj/setup.py
+++ b/AmberTools/src/pytraj/setup.py
@@ -157,8 +157,6 @@ def prepare_env_for_osx():
         '21': '12.2',
         '22': '13.1',
     }
-    os.environ['CXX'] = 'clang++'
-    os.environ['CC'] = 'clang'
     darwin_major = os.uname()[2].split('.')[0]
     if darwin_major in darwin_major_to_osx_map:
         os.environ['MACOSX_DEPLOYMENT_TARGET'] = darwin_major_to_osx_map[darwin_major]
@@ -168,7 +166,7 @@ def prepare_env_for_osx():
         swvers = subprocess.run("sw_vers -productVersion".split(), capture_output=True)
         os.environ["MACOSX_DEPLOYMENT_TARGET"] = ".".join(swvers.stdout.decode("utf-8").strip().split(".")[:2])
 
-        
+
 if sys.platform.startswith('darwin') and is_clang(os.getenv('CXX')):
     prepare_env_for_osx()
     # We don't need this anymore?
